--- a/src/services/knowledge_service.py
+++ b/src/services/knowledge_service.py
@@ -19,22 +19,15 @@ class KnowledgeService:
             Answer:
         """)

-    def embed_query(self, query: str):
-        response = requests.post(
-            f"{self.embedding_service_url}/embed",
-            json={"texts": [query]},
-            timeout=10
-        )
-        response.raise_for_status()
-        return response.json()["embeddings"][0]
-
-    def get_context(self, embedding: list[float]):
+    def get_context(self, query: str):
+        """
+        Get context from the rewards query service using the original query text.
+        The rewards-query-service will handle embedding generation internally.
+        """
         response = requests.post(
             f"{self.rewards_query_service_url}/rewards/query",
-            json={"embedding": embedding, "top_k": 3},
+            json={"query": query, "top_k": 3},
             timeout=10
         )
         response.raise_for_status()
         return response.json()["results"]
@@ -48,7 +41,6 @@ class KnowledgeService:
         return result.content.strip()

     def answer_question(self, question: str):
-        embedding = self.embed_query(question)
-        context = self.get_context(embedding)
+        context = self.get_context(question)
         return self.generate_answer(question, context)